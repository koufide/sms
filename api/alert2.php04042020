<?php
error_reporting(E_ALL);
ini_set('display_errors', 'On');

ob_start();

$now = new DateTime('NOW', new DateTimeZone(('UTC')));
print "<br/><br/><br/>\n\n\n ========== EXECUTION ALERT ====== <br/>\n" . $now->format('d/m/Y H:i:s');

define("API_REP",     '/var/www/html/sms/api');

// print "<br/>\n current getcwd: " . getcwd();
chdir(API_REP);
// print "<br/>\n after change getcwd: " . getcwd();

// $chemin_params = getcwd() . '/params.xml';
$chemin_params = 'params.xml';

if (!file_exists($chemin_params)) {
    exit("<br/>\n chemin : $chemin_params introuvable");
}


// $chemin = getcwd();
$chemin = API_REP;
// print "<br/>\n chemin: $chemin <br/>\n";
//exit("<br/>\n----------quit");

require_once($chemin . '/MyPDO.php');
// require_once($chemin . '/api/MyPDO.php');
// require_once('/var/www/html/sms/api/' . 'MyPDO.php');

$conn = new MyPDO();
$dbh = $conn->getConn();


require_once($chemin . '/Fonction.php');
$fct = new Fonction();


$param = simplexml_load_file($chemin_params);

$file_alert_log = $param->files->file_alert_log;


$log_rep = $param->reps->log_rep;

$file_lock_push_sms = $param->files->file_lock_push_sms;
$file_lock_push_sms = $log_rep . $file_lock_push_sms;

$uti = $param->sms->user;
$mdp = $param->sms->mdp;
// var_dump("$uti $mdp");


// D'autres manières d'appeler error_log():
#error_log("TEST !", 3, $log_rep . $file_alert_log);



if (file_exists($file_lock_push_sms)) {
    exit("<br/>\n exit! traitement encours...");
} else {
    $myfile = fopen("$file_lock_push_sms", "w");
}


// exit("<br/>\n --------quitter manuellement---------");



// $push_rep='/var/www/html/sms/public/outgoing';
// $arch_outgoing='/var/www/html/sms/public/arch_outgoing';

// $push_rep = '/home/ftpuser3/outgoing';
// $push_rep = '/home/ftpuser/ftp/outgoing';

// $ftp_outgoing_rep = $param->reps->ftp_outgoing;
// $push_rep = $ftp_outgoing_rep;


// $arch_outgoing = '/var/www/html/sms/public/arch_outgoing';
// $arch_outgoing = $param->reps->arch_outgoing;




// if (!is_dir($push_rep)) {
//     mkdir($push_rep);
// }

// if (!is_dir($arch_outgoing)) {
//     mkdir($arch_outgoing);
// }

$applic = 'ORION'; ///?????

$tab_messages = [];

$user = 'cgb';
$pass = '6RBA5WBH';

$url = 'http://192.168.200.42:8280/pushsms/v1.0.0/sendSms_notification';
$bearer = 'b45f3329-0d6c-3d17-903f-4049726fc077';



# liste des messages chargés non traités
// $sql = "SELECT distinct a.phone, s.* FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0 limit 0,1 ";
// $sql = "SELECT distinct a.phone, s.* FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0 ";
// $sql = "SELECT distinct a.phone, s.message FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0 ";
// $sql = "SELECT distinct a.phone, s.message, a.compte FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0 ";
// $sql = "SELECT distinct a.phone, s.message, a.compte FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0  limit 0,500";
$sql = "SELECT distinct a.phone, s.message, a.compte, s.datecharge  FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0  limit 0,100";
//$sql = "SELECT distinct a.phone, s.message, a.compte , s.datecharge FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0  limit 0,1";
//$sql = "SELECT distinct a.phone, s.message, a.compte, s.datecharge FROM chargesms s JOIN abonnement a WHERE s.compte=a.compte AND a.actif = 1 AND s.traite = 0  limit 0,10";
$stmt = $dbh->prepare($sql);
$stmt->execute();
$abonnements = $stmt->fetchAll();

// print("<pre>");
// print_r($abonnements);
// print("<br/>\n");


/*
#---- client sans abonnement 
$sql = "UPDATE chargesms SET chargesms.traite = :traite WHERE chargesms.traite='0' AND chargesms.compte = :compte and message = :message and date_format(chargesms.datecharge,'%d/%m/%Y') = :date_str 
and not exists ( select null from abonnement a where a.compte=chargesms.compte )
";

$stmt = $dbh->prepare($sql);

$data = [];
$data['traite'] = '2';
#// 3 - doublon     /2- client sans abonnement
$data['compte'] = $compte;
$data['message'] = trim($message);
$data['date_str'] = $now->format('d/m/Y');

// print_r($sql);
// var_dump($data);

try {
    $res_update = $stmt->execute($data);
    var_dump($res_update);
    $count = $stmt->rowCount();

    if ($count == '0') {
        echo "Failed !";
    } else {
        echo "Success !";
    }
    var_dump($count);
} catch (\Throwable $th) {
    // $fct->returnError(null, $th->getFile() . ' ' . $th->getLine() . ' ' . $th->getMessage());
    print_r($th);
}
*/


$i = 0;
foreach ($abonnements as $abonnement) {
    $i++;
    $compte = $abonnement['compte'];
    $tel = $abonnement['phone'];
    $message = $abonnement['message'];
    $message = $fct->replaceSpecialChar($message);


    var_dump($abonnement);

    //var_dump(trim($message));
    //$message = 'Votre compte courant No 1500*****07 a enregistre au credit le 09-05-19, un versmnt de 85.000 F. Le solde est 7.299.629 F.';
    // var_dump(trim($message));

    ####CHECK FLOODING
    # eviter d'envoyer  un meme message plusieurs fois 

    /*
    // $sql = "select * from outgoing where a = :tel and text = :text and date_format(sendsms_at,'%d/%m/%Y') = :date_str ";
    $sql = "select * from outgoing where a = :tel and text = :text ";
    $sql = "select * from outgoing where  a = :tel and text = :text and date_format(sendsms_at,'%d/%m/%Y') = :date_str ";
    $stmt = $dbh->prepare("$sql");
    $stmt->execute(
        [
            'tel' => $tel,
            'text' =>  trim($message),
            'date_str' => $now->format('d/m/Y')
        ]
    );

    $outgoings = $stmt->fetChall();
    // var_dump($outgoings);
    // exit("<br/>\n --------- stop ---------");
    */


    $res_flooding = $fct->flooding($tel, trim($message), $now->format('d/m/Y'));
    var_dump($res_flooding);

    // if (empty($outgoings)) {
    if ($res_flooding == 0) {


        //********************************************************************************* */
        //* 
        $body = array(
            "to" => $tel,
            "text" => trim($message)
        );

        $json = json_encode($body);

        $curl = curl_init();

        curl_setopt_array($curl, array(
            CURLOPT_URL => "$url",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_SSL_VERIFYPEER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            // CURLOPT_POSTFIELDS => "{ \"from\":\"InfoSMS\", \"to\":\"22503612783\", \"text\":\"Test SMS.\" }",
            CURLOPT_POSTFIELDS => "$json",
            CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "Authorization: Bearer " . $bearer,
                "Authorization: Basic " . base64_encode("$user:$pass"),
                "content-type: application/json"
            ),
        ));

        // curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false)

        $response = curl_exec($curl);
        var_dump($response);
        $err = curl_error($curl);
        var_dump($err);
        curl_close($curl);

        //*/

        //********************************************************************************* */
        $from = $fct->getFrom();
        $text = trim($message);
        /*
        
        $to = $tel;
       

        $from = $fct->getFrom();
        $to = '22506306746';
        $text = trim($message);

        $tab_messages = [
            'bulkId' => $fct->getBulkId(strtoupper(substr($applic, 0, 3))),
            'messages' => [
                'from' =>  $from,
                'destinations' => [
                    "to" => $to,
                    "messageId" => $fct->getMessageId(strtoupper(substr($applic, 0, 3)))
                ],
                'text' => $text,
                'flash' => $fct->getFlash(),
                'language' => [
                    "languageCode" => $fct->getLanguageCode()
                ],
                'transliteration' => $fct->getTransliteration(),
            ],
        ];

        // print "<pre>";
        // print_r($tab_messages);



        #send sms
        $res_send = $fct->sendMultiSMStoMultiDestV4($tab_messages);
        var_dump($res_send);

        */

        //********************************************************************************* */





        // if ($res_send) {
        if ($response) {
            $tab_message = json_decode($response, true);
            //$tab_message = json_decode($res_send, true);

            echo "<pre>";
            print_r($tab_message);
            // echo $tab_message;

            $bulkid = $tab_message['retour']['bulkId'];
            // echo $bulkid;
            $retour['bulkId'] = $bulkid;
            $retour['from'] =   $from;
            $retour['text'] = $text;


            $erreur = $tab_message['erreur'];

            // if (empty($tab_message['messages'])) {
            if ($erreur != 0) {
                $retourErreur = $erreur;
                $retourMessage = 'Echec sendsms';
                var_dump("$retourErreur $retourMessage");
                //retour_json($user, $retourErreur, $retourMessage, $retour);
            } else {


                $colonnes = "traite = :traite, datetrt = :datetrt ";
                $data = [
                    'compte' => $compte,
                    'traite' => '1',
                    'datetrt' => $now->format('Y/m/d H:i:s')
                ];



                $conditions = "compte = :compte";

                $sql = "update chargesms set $colonnes where $conditions ";

                $stmt = $dbh->prepare($sql);
                try {
                    $res_update = $stmt->execute($data);
                    // var_dump($res_update);
                    $count = $stmt->rowCount();


                    if ($count == '0') {
                        echo "Failed !";
                    } else {
                        echo "Success !";
                        $retourErreur = $erreur;
                        $retourMessage = 'succes sendsms';
                        var_dump("$retourErreur $retourMessage");
                    }
                    // var_dump($count);
                    print "$count <br/>\n";
                } catch (\Throwable $th) {
                    //$this->returnError(null, $th->getFile() . ' ' . $th->getLine() . ' ' . $th->getMessage());
                    var_dump(null, $th->getFile() . ' ' . $th->getLine() . ' ' . $th->getMessage());
                }







                // $messages = $tab_message['messages'];
                // // print_r($messages);

                // foreach ($messages as $key => $r_message) {
                //     $r_to = $r_message['to'];
                //     $retour['to'] = $r_to;

                //     $r_status = $r_message['status'];

                //     $groupId = $r_status['groupId'];
                //     $retour['statusGroupId'] = $groupId;

                //     $groupName = $r_status['groupName'];
                //     $retour['statusGroupName'] = $groupName;

                //     $id = $r_status['id'];
                //     $retour['statusId'] = $id;

                //     $name = $r_status['name'];
                //     $retour['statusName'] = $name;

                //     $description = $r_status['description'];
                //     $retour['statusDescription'] = $description;

                //     $messageId = $r_message['messageId'];
                //     $retour['messageId'] = $messageId;


                //     $data2 = [];
                //     $data2['bulkId'] = $bulkid;
                //     $data2['de'] = $from;

                //     $data2['message_id'] = $messageId;
                //     $data2['a'] = $r_to;
                //     $data2['text'] =  $text;

                //     $data2['status_sendsms'] = $messageId;
                //     $data2['sendsms_at'] = $now->format('Y-m-d H:i:s');
                //     $data2['letest'] = $messageId;
                //     $data2['send_groupid'] = $groupId;
                //     $data2['send_groupname'] = $groupName;
                //     $data2['send_id'] = $id;
                //     $data2['send_name'] = $name;
                //     $data2['send_description'] = $description;
                //     $data2['tentative'] = 0;
                //     $data2['applic'] = strtoupper($applic);



                //     $sql = "INSERT INTO outgoing(de, a, text, message_id, status_sendsms, sendsms_at, letest, send_groupid, 
                //             send_groupname, send_id, send_name, send_description, bulk_id, tentative, applic)
                //             VALUES(:de , :a , :text , :message_id , :status_sendsms , :sendsms_at , :letest , :send_groupid , :send_groupname , 
                //             :send_id , :send_name , :send_description, :bulkId, :tentative, :applic)
                //             ";

                //     $stmt = $dbh->prepare($sql);
                //     //print_r($sql);
                //     //var_dump($data2);
                //     $res = $stmt->execute($data2);

                //     $count = $stmt->rowCount();

                //     if ($count == '0') {
                //         $retourErreur = '1';
                //         $retourMessage = 'Echec [insert] outgoing';
                //         //retour_json($user, $retourErreur, $retourMessage, $retour);
                //         var_dump("$retourErreur $retourMessage");
                //     } else {
                //         $retourErreur = '0';
                //         $retourMessage = '';
                //         //retour_json($user, $retourErreur, $retourMessage, $retour);
                //         var_dump("$retourErreur $retourMessage");
                //     } //if ($count == '0') {

                // } // foreach ($r_messages as $key => $r_message) {




            } // if(empty( $tab_message['messages'])){

        } //response

        // echo ($response);







        //********************************************************************************* */


        // $destinations = [
        //     "to" => $tel,
        //     "messageId" => $fct->getMessageId()
        // ];


        // $tab_destinations['from'] = $fct->getFrom();
        // $tab_destinations['destinations'] = $destinations;
        // $tab_destinations['text'] = $message;
        // $tab_destinations['flash'] = $fct->getFlash();
        // $tab_destinations['language'] = ["languageCode" => $fct->getLanguageCode()];
        // $tab_destinations['transliteration'] = $fct->getTransliteration();
        // // $tab_destinations['intermediateReport'] = $fct->getFlash();
        // // $tab_destinations['notifyUrl'] = "https://www.example.com/sms/advanced";
        // // $tab_destinations['notifyContentType'] =  application / json ";
        // // $tab_destinations['callbackData'] =  "application / json ";
        // // $tab_destinations['validityPeriod'] = 720;
        // // $tab_destinations['sendAt'] = "2015-07-07T17:00:00.000+01:00";
        // // $tab_destinations['deliveryTimeWindow'] = "2015-07-07T17:00:00.000+01:00";


        // // if (!empty($tab_destinations)) {
        // $tmp_destinations[] = $tab_destinations;
        // // }

    } else { //// if(empty($outgoings)){
        print "<br/>\n doublon message en double: ";
        //var_dump($outgoings);
        # ------------- DOUBLON 
        $sql = "UPDATE chargesms SET traite = :traite WHERE traite='0' AND compte = :compte and message = :message and date_format(datecharge,'%d/%m/%Y') = :date_str ";

        $stmt = $dbh->prepare($sql);

        $data = [];
        $data['traite'] = '3';
        #// 3 - doublon     /2- client sans abonnement
        $data['compte'] = $compte;
        $data['message'] = trim($message);
        $data['date_str'] = $now->format('d/m/Y');

        // print_r($sql);
        // var_dump($data);

        try {
            $res_update = $stmt->execute($data);
            var_dump($res_update);
            $count = $stmt->rowCount();

            if ($count == '0') {
                echo "Failed !";
            } else {
                echo "Success !";
            }
            var_dump($count);
        } catch (\Throwable $th) {
            // $fct->returnError(null, $th->getFile() . ' ' . $th->getLine() . ' ' . $th->getMessage());
            print_r($th);
        }
    } // if(empty($outgoings)){


} //foreach($abonnements as $abonnement){

// print("<pre>");
// print_r($tmp_destinations);
// print("<br/>\n");

print "<br/>\n traite: $i <br/>\n<br/>\n";
// exit("<br/>\n-----exit tmp_destinations----");

// if (!empty($tmp_destinations)) {

//     // print("<br/>\n-----tmp_destinations----");
//     // print("<pre>");
//     // print_r($tmp_destinations);

//     $json = json_encode($tmp_destinations);
//     // print_r($json);
//     // var_dump($json);

//     $tab_messages["bulkId"] = $fct->getBulkId();
//     $tab_messages["messages"] = $tmp_destinations;

//     // print("<br/>\n----request -tab_messages----");
//     // print("<pre>");
//     // print_r($tab_messages);
//     // print("<br/>\n");

//     $json = json_encode($tab_messages);
//     // print_r($json);
//     // print("<br/>\n");
//     // print("<br/>\n");
// } //if


// if (!empty($tab_messages)) {
//     print("<br/>\n----request -tab_messages----");
//     print("<pre>");
//     print_r($tab_messages);
//     print("<br/>\n");

//     // $res = $fct->sendMultiSMStoMultiDestV3($tab_messages);
//     #fik $res = $fct->sendMultiSMStoMultiDestV5($tab_messages, $applic);
//     // var_dump($res);
// }


unlink($file_lock_push_sms);


$out1 = ob_get_contents();
$myfile = file_put_contents('log/alert2_' . $now->format('Y_m_d') . '.log', $out1 . PHP_EOL, FILE_APPEND | LOCK_EX);

<?php

/**
 * ENVOYER DES SMS A DES NUMEROS , MEME SANS ABONNEMENT
 * 23/02/2020
 * Fidelin KOUAME
 */
error_reporting(E_ALL);
ini_set('display_errors', 'On');

ob_start();

$now = new DateTime('NOW', new DateTimeZone(('UTC')));
print "<br/><br/><br/>\n\n\n ========== EXECUTION MANUAL PUSH SMS ====== <br/>\n" . $now->format('d/m/Y H:i:s');

define("API_REP",     '/var/www/html/sms/api');

// print "<br/>\n current getcwd: " . getcwd();
chdir(API_REP);
// print "<br/>\n after change getcwd: " . getcwd();

// $chemin_params = getcwd() . '/params.xml';
$chemin_params = 'params.xml';

if (!file_exists($chemin_params)) {
    exit("<br/>\n chemin : $chemin_params introuvable");
}


//---------------------------------------------------
$user = 'bqenligne';
$pass = 'EILRT4C4';
//var_dump(base64_encode("$user:$pass"));
$url = 'http://192.168.200.42:8280/pushsms/v1.0.0/sendSms_notification';
$bearer = 'b45f3329-0d6c-3d17-903f-4049726fc077';
//---------------------------------------------------



// $chemin = getcwd();
$chemin = API_REP;
// print "<br/>\n chemin: $chemin <br/>\n";
//exit("<br/>\n----------quit");

require_once($chemin . '/MyPDO.php');
// require_once($chemin . '/api/MyPDO.php');
// require_once('/var/www/html/sms/api/' . 'MyPDO.php');

$conn = new MyPDO();
$dbh = $conn->getConn();


require_once($chemin . '/Fonction.php');
$fct = new Fonction();


$param = simplexml_load_file($chemin_params);

$file_alert_log = $param->files->file_alert_log;


$log_rep = $param->reps->log_rep;

$file_lock_push_sms = $param->files->file_lock_push_sms;
$file_lock_push_sms = $log_rep . $file_lock_push_sms;

$uti = $param->sms->user;
$mdp = $param->sms->mdp;
// var_dump("$uti $mdp");


// D'autres manières d'appeler error_log():
#error_log("TEST !", 3, $log_rep . $file_alert_log);



if (file_exists($file_lock_push_sms)) {
    exit("<br/>\n exit! traitement encours...");
} else {
    $myfile = fopen("$file_lock_push_sms", "w");
}

// exit("<br/>\n --------quitter manuellement---------");




$ftp_outgoing_rep = $param->reps->ftp_outgoing;
$push_rep = $ftp_outgoing_rep;


$arch_outgoing = $param->reps->arch_outgoing;


if (!is_dir($arch_outgoing)) {
    mkdir($arch_outgoing);
}

$trouve = false;


if ($dossier = opendir($push_rep)) {
    while (false !== ($fichier = readdir($dossier))) {
        if ($fichier != '.' && $fichier != '..' && $fichier != 'index.php' && $fichier != 'archive') {
            // var_dump($fichier);
            $pathinfo = pathinfo($fichier);
            // print "<br/>\n pathinfo : = ";
            var_dump($pathinfo);

            $ext = $pathinfo['extension'];
            $basename = $pathinfo['basename'];
            $filename = $pathinfo['filename'];

            // exit("<br/>\n --------quitter manuellement---------");


            #if (preg_match("/^arch_PUSH/i", $filename)) {   # RELANCER LES FICHIERS ARCHIVES
            if (preg_match("/^MPUSH/i", $filename)) {

                //$myfile = fopen("$file_lock_charge_sms", "w");


                print "<br/>\n echo trouve ==> $filename";


                # 25102019 koufide / chercher une erreur dans le fichier
                if (strpos(file_get_contents("$push_rep/$fichier"), 'ORA-') !== false) {

                    #deplacer le fichier
                    // rename($push_rep  . $fichier, $arch_outgoing . 'error2_' . $filename . '.' . $ext . ' # ' . $file_lock_charge_sms);
                    rename($push_rep  . $fichier, $arch_outgoing . 'error2_' . $filename . '.' . $ext);
                    //print "<br/>\n test ORA- :" . "$push_rep . '/' . $fichier, $arch_outgoing . '/error2_' . $filename . '.' . $ext . ' # ' . $file_lock_charge_sms";
                    ##############################################
                    ///$fct->returnError2(null, $push_rep . '/' . $fichier . ' , ' .  '/error2_' . $filename . '.' . $ext . ' # ' . $file_lock_charge_sms);
                    $res_send = $fct->sendSMS('22509327626', $push_rep  . $fichier . ' , ' .  '/error2_' . $filename . '.' . $ext);


                    # ajoute le 23102019 koufide. permet de continuer les traitements apres une erreur
                    #supprimer le lock
                    // unlink($file_lock_charge_sms);
                } else {


                    $handle = fopen("$push_rep/$fichier", "r");
                    if ($handle) {

                        // $tab_destinations = [];
                        // $tmp_destinations = [];
                        $i = 0;
                        while (($line = fgets($handle)) !== false) {

                            if ($line != "." && $line != "..") {

                                print "<br/>\n line dans le fichier : => ";
                                var_dump("fichier $fichier line : " . $line);


                                $tab_line = explode('#', $line);
                                print "<br/>\n tab_line : => ";
                                var_dump($tab_line);

                                if (!empty($tab_line)) {

                                    $i++;

                                    // var_dump($tab_line);

                                    $code = $tab_line[0];
                                    $compte = $tab_line[1];
                                    $message = $tab_line[2];
                                    $tel = $tab_line[3];
                                    // $message = $fct->supprimerRetourChariot($message);
                                    $message = $fct->replaceSpecialChar($message);

                                    print "<br/>\n  code:  $code";
                                    print "<br/>\n  compte:   $compte";
                                    print "<br/>\n  message:   $message";
                                    print "<br/>\n new tel:   $tel";


                                    $body = array(
                                        "to" => $tel,
                                        "text" => $message
                                    );

                                    $json = json_encode($body);



                                    $curl = curl_init();

                                    curl_setopt_array($curl, array(
                                        CURLOPT_URL => "$url",
                                        CURLOPT_RETURNTRANSFER => true,
                                        CURLOPT_SSL_VERIFYPEER => true,
                                        CURLOPT_ENCODING => "",
                                        CURLOPT_MAXREDIRS => 10,
                                        CURLOPT_TIMEOUT => 30,
                                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                        CURLOPT_CUSTOMREQUEST => "POST",
                                        // CURLOPT_POSTFIELDS => "{ \"from\":\"InfoSMS\", \"to\":\"22503612783\", \"text\":\"Test SMS.\" }",
                                        CURLOPT_POSTFIELDS => "$json",
                                        CURLOPT_HTTPHEADER => array(
                                            "accept: application/json",
                                            "Authorization: Bearer " . $bearer,
                                            "Authorization: Basic " . base64_encode("$user:$pass"),
                                            "content-type: application/json"
                                        ),
                                    ));


                                    // curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false)

                                    $response = curl_exec($curl);
                                    $err = curl_error($curl);

                                    curl_close($curl);

                                    var_dump($response);
                                    // echo ($response);
                                    var_dump($err);
                                } //if(!empty($tab_line)){


                            } // if ($line != "." && $line != "..") {

                        } //while (($line = fgets($handle)) !== false) {

                        fclose($handle);


                        print "<br/>\n  traite: $i <br/>\n<br/>\n";
                    } else { // if ($handle) {
                        // error opening the file.
                        print "<br/>\n erreur ouverture du fichier ";
                    }

                    #deplacer le fichier
                    rename($push_rep . '/' . $fichier, $arch_outgoing . '/arch_' . $filename . '.' . $ext);

                    #supprimer le lock
                    //unlink($file_lock_charge_sms);
                }  // if (strpos(file_get_contents("$push_rep/$fichier"), 'ORA-') !== false) {


            } else { // if (preg_match("/^MPUSH/i", $filename)) {
                print "<br/>\n echo fichier MPUSH non trouve";
            }
        } // if ($fichier != '.' && $fichier != '..' && $fichier != 'index.php' && $fichier != 'archive') {

    } //while (false !== ($fichier = readdir($dossier))) {
    closedir($dossier);
} else {
    echo 'Le dossier n\' a pas pu être ouvert';
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// print("<pre>");
// print_r($tmp_destinations);
// print("<br/>\n");

// exit("<br/>\n-----exit tmp_destinations----");


unlink($file_lock_push_sms);

$out1 = ob_get_contents();
$myfile = file_put_contents('log/m2_pushsms_' . $now->format('Y_m_d') . '.log', $out1 . PHP_EOL, FILE_APPEND | LOCK_EX);
